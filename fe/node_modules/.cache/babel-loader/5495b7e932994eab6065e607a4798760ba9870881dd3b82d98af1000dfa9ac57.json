{"ast":null,"code":"var _jsxFileName = \"B:\\\\241\\\\Git\\\\Final_Project_News\\\\fe\\\\src\\\\pages\\\\category.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/dataTables.js\";\nimport AdminHeader from \"../components/AdminHeader\";\nimport AdminSideNav from \"../components/AdminSideNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Catagory = () => {\n  _s();\n  const [categories, setCategories] = useState([]); // State để lưu danh sách danh mục\n  const [loading, setLoading] = useState(true); // State để theo dõi trạng thái tải dữ liệu\n\n  const columns = [{\n    key: \"name\",\n    label: \"Tên Danh mục\"\n  }, {\n    key: \"status\",\n    label: \"Trạng thái\"\n  }, {\n    key: \"createdAt\",\n    label: \"Ngày Tạo\"\n  }, {\n    key: \"createdBy\",\n    label: \"Người Tạo\"\n  }];\n  useEffect(() => {\n    // Sử dụng fetch để gọi API lấy danh sách danh mục từ backend\n    fetch(\"http://localhost:5000/api/categories\") // URL API backend\n    .then(response => response.json()) // Chuyển dữ liệu thành JSON\n    .then(data => {\n      // Xử lý mỗi danh mục và lấy thông tin người tạo (CreatedBy) từ _id\n      Promise.all(data.map(category => {\n        return fetch(`http://localhost:5000/api/accounts/${category.CreatedBy}`) // Gọi API để lấy thông tin người tạo\n        .then(response => response.json()).then(accountData => {\n          // Cập nhật với tên người tạo\n          category.createdBy = accountData.Username; // Giả sử API trả về 'name' của người tạo\n          return category; // Trả lại category đã được cập nhật\n        });\n      })).then(updatedCategories => {\n        // Cập nhật danh sách danh mục với thông tin người tạo đã được lấy\n        const transformedData = updatedCategories.map(category => ({\n          name: category.Name,\n          status: category.Status ? \"Hoạt động\" : \"Không hoạt động\",\n          createdAt: new Date(category.createdAt).toLocaleDateString(\"vi-VN\"),\n          createdBy: category.createdBy // Hiển thị tên người tạo\n        }));\n        setCategories(transformedData); // Cập nhật state với dữ liệu đã xử lý\n        setLoading(false); // Đổi trạng thái loading khi dữ liệu đã được tải xong\n      }).catch(error => {\n        console.error(\"Có lỗi khi lấy dữ liệu danh mục hoặc thông tin người tạo:\", error);\n        setLoading(false); // Đổi trạng thái loading khi có lỗi\n      });\n    }).catch(error => {\n      console.error(\"Có lỗi khi lấy dữ liệu danh mục:\", error);\n      setLoading(false); // Đổi trạng thái loading khi có lỗi\n    });\n  }, []); // Chạy 1 lần khi component được render lần đầu\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this); // Hiển thị thông báo khi dữ liệu đang tải\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Catagory, \"Ku/3fYTZ4p+HhLbl/Ex0fsiHh1U=\");\n_c = Catagory;\nexport default Catagory;\nvar _c;\n$RefreshReg$(_c, \"Catagory\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","AdminHeader","AdminSideNav","jsxDEV","_jsxDEV","Catagory","_s","categories","setCategories","loading","setLoading","columns","key","label","fetch","then","response","json","data","Promise","all","map","category","CreatedBy","accountData","createdBy","Username","updatedCategories","transformedData","name","Name","status","Status","createdAt","Date","toLocaleDateString","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["B:/241/Git/Final_Project_News/fe/src/pages/category.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"../components/dataTables.js\";\r\nimport AdminHeader from \"../components/AdminHeader\";\r\nimport AdminSideNav from \"../components/AdminSideNav\";\r\n\r\nconst Catagory = () => {\r\n  const [categories, setCategories] = useState([]); // State để lưu danh sách danh mục\r\n  const [loading, setLoading] = useState(true); // State để theo dõi trạng thái tải dữ liệu\r\n\r\n  const columns = [\r\n    { key: \"name\", label: \"Tên Danh mục\" },\r\n    { key: \"status\", label: \"Trạng thái\" },\r\n    { key: \"createdAt\", label: \"Ngày Tạo\" },\r\n    { key: \"createdBy\", label: \"Người Tạo\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Sử dụng fetch để gọi API lấy danh sách danh mục từ backend\r\n    fetch(\"http://localhost:5000/api/categories\") // URL API backend\r\n      .then((response) => response.json()) // Chuyển dữ liệu thành JSON\r\n      .then((data) => {\r\n        // Xử lý mỗi danh mục và lấy thông tin người tạo (CreatedBy) từ _id\r\n        Promise.all(\r\n          data.map((category) => {\r\n            return fetch(\r\n              `http://localhost:5000/api/accounts/${category.CreatedBy}`\r\n            ) // Gọi API để lấy thông tin người tạo\r\n              .then((response) => response.json())\r\n              .then((accountData) => {\r\n                // Cập nhật với tên người tạo\r\n                category.createdBy = accountData.Username; // Giả sử API trả về 'name' của người tạo\r\n                return category; // Trả lại category đã được cập nhật\r\n              });\r\n          })\r\n        )\r\n          .then((updatedCategories) => {\r\n            // Cập nhật danh sách danh mục với thông tin người tạo đã được lấy\r\n            const transformedData = updatedCategories.map((category) => ({\r\n              name: category.Name,\r\n              status: category.Status ? \"Hoạt động\" : \"Không hoạt động\",\r\n              createdAt: new Date(category.createdAt).toLocaleDateString(\r\n                \"vi-VN\"\r\n              ),\r\n              createdBy: category.createdBy, // Hiển thị tên người tạo\r\n            }));\r\n            setCategories(transformedData); // Cập nhật state với dữ liệu đã xử lý\r\n            setLoading(false); // Đổi trạng thái loading khi dữ liệu đã được tải xong\r\n          })\r\n          .catch((error) => {\r\n            console.error(\r\n              \"Có lỗi khi lấy dữ liệu danh mục hoặc thông tin người tạo:\",\r\n              error\r\n            );\r\n            setLoading(false); // Đổi trạng thái loading khi có lỗi\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Có lỗi khi lấy dữ liệu danh mục:\", error);\r\n        setLoading(false); // Đổi trạng thái loading khi có lỗi\r\n      });\r\n  }, []); // Chạy 1 lần khi component được render lần đầu\r\n\r\n  if (loading) {\r\n    return <div>Đang tải dữ liệu...</div>; // Hiển thị thông báo khi dữ liệu đang tải\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AdminHeader />\r\n      <DataTable columns={columns} data={categories} />{\" \"}\r\n      {/* Truyền dữ liệu vào DataTable */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Catagory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}